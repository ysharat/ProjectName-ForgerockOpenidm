openidm.port.http=8080
openidm.port.https=8443
openidm.port.mutualauth=8444
openidm.host=esfmylabfridm.mydmn.com

openidm.auth.clientauthonlyports=8444

openidm.https.keystore.cert.alias=openidm-localhost

# Prometheus endpoint authentication
openidm.prometheus.username=prometheus
openidm.prometheus.password=prometheus
openidm.prometheus.role=internal/role/openidm-prometheus

openidm.servlet.alias=/openidm

# key in keystore to handle config encryption
openidm.script.javascript.debug=transport=socket,suspend=y,address=9888,trace=true
#openidm.script.javascript.sources=/Eclipse/workspace/External JavaScript Source/

# optionally map a hostname to a specific client key alias
openidm.ssl.host.aliases=localhost=

# policy enforcement enable/disable
openidm.policy.enforcement.enabled=true

# node id if clustered; each node in a cluster must have a unique node id
openidm.node.id=node1

# enables the execution of persistent schedulers
openidm.scheduler.execute.persistent.schedules=true

# substitute proper values for the datasource json files by specifying
# the repo url and port (MSSQL = 1433, MYSQL = 3306, POSTGRES = 5432) ;
# those can also be passed via java properties
#
openidm.repo.host =localhost
openidm.repo.port =3306

# determines whether javascript exceptions will include debug information - e.g. file name, line number
javascript.exception.debug.info=false

# determines the TLS version used by the http client in the external rest service to connect to TLS-protected resources
# valid values: SSLv3, TLSv1, TLSv1.1, TLSv1.2
# defaults to TLSv1.2 if not specified
#openidm.external.rest.tls.version=TLSv1.1

# set external REST service's HTTP client hostname verification policy for HTTPS endpoints
# valid values: ALLOW_ALL, STRICT
# defaults to STRICT if not specified
openidm.external.rest.hostnameVerifier=ALLOW_ALL

# Indicates whether the IDM deployment is automated by a cluster management tool such as Kubernetes, which
# deploys containers in Pods whose identities are transient. Pod shutdown will mean that the corresponding cluster
# node identity will never re-appear in the cluster, and thus IDM's record of this cluster node should be deleted
# upon cluster node shutdown or failure. Defaults to false if not specified.
# openidm.cluster.remove.offline.node.state=true

# enables API Descriptor generation, which if set to 'false', renders the API Explorer non-functional
openidm.apidescriptor.enabled=true

# Filtered headers in audit.json that may be customized
com.iplanet.am.cookie.name=iPlanetDirectoryPro
com.sun.identity.auth.cookieName=AMAuthCookie
#javascript.exception.debug.info=true
groovy.exception.debug.info=true
